{% render 'synchrony-financing-options-data' %}

{{ 'template-collection.css' | asset_url | stylesheet_tag }}
{{ 'component-loading-overlay.css' | asset_url | stylesheet_tag }}
{{ 'component-card.css' | asset_url | stylesheet_tag }}
{{ 'component-price.css' | asset_url | stylesheet_tag }}

<link rel="preload" href="{{ 'component-rte.css' | asset_url }}" as="style" onload="this.onload=null;this.rel='stylesheet'">

{%- if section.settings.enable_quick_add -%}
  <link rel="stylesheet" href="{{ 'quick-add.css' | asset_url }}" media="print" onload="this.media='all'">
  <script src="{{ 'quick-add.js' | asset_url }}" defer="defer"></script>
  <script src="{{ 'product-form.js' | asset_url }}" defer="defer"></script>
{%- endif -%}
<noscript>{{ 'component-rte.css' | asset_url | stylesheet_tag }}</noscript>

{%- style -%}
  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }
{%- endstyle -%}

{% assign related_handles_split = product.metafields.product.colorRelatedHandles.value | split: ',' %}

<div class="section-{{ section.id }}-padding page-width">

  {% render 'filter-actions' with search:false, sticky:true %}
  {% render 'filters-offcanvas', resource: collection %}
  {% render 'sorting-offcanvas', resource: collection %}

  <div class="filters-panel hidden"><div></div></div>

  <div class="quick-view-wrapper">
    <div class="quick-view-container hidden"></div>
    {% render 'icon' with icon_name: 'close-popup', classes: 'mobile hidden' %}
  </div>
  
  {% comment %} Sort is the first tabbable element when filter type is vertical {% endcomment %}
  {%- if section.settings.enable_sorting and section.settings.filter_type == 'vertical' -%}
    <facet-filters-form class="facets facets-vertical-sort page-width small-hide no-js-hidden">
      <form class="facets-vertical-form" id="FacetSortForm">
        <div class="facet-filters sorting caption">
          <div class="facet-filters__field">
            <h2 class="facet-filters__label caption-large text-body">
              <label for="SortBy">{{ 'products.facets.sort_by_label' | t }}</label>
            </h2>
            <div class="select">
              {%- assign sort_by = collection.sort_by | default: collection.default_sort_by -%}
              <select name="sort_by" class="facet-filters__sort select__select caption-large" id="SortBy" aria-describedby="a11y-refresh-page-message">
                {%- for option in collection.sort_options -%}
                  <option value="{{ option.value | escape }}"{% if option.value == sort_by %} selected="selected"{% endif %}>{{ option.name | escape }}</option>
                {%- endfor -%}
              </select>
              {% render 'icon-caret' %}
            </div>
          </div>
          <noscript>
            <button type="submit" class="facets__button-no-js button button--secondary">{{ 'products.facets.sort_button' | t }}</button>
          </noscript>
        </div>

        <div class="product-count-vertical light" role="status">
          <h2 class="product-count__text text-body">
            <span id="ProductCountDesktop">
              {%- if collection.results_count -%}
                {{ 'templates.search.results_with_count' | t: terms: collection.terms, count: collection.results_count }}
              {%- elsif collection.products_count == collection.all_products_count -%}
                {{ 'products.facets.product_count_simple' | t: count: collection.products_count }}
              {%- else -%}
                {{ 'products.facets.product_count' | t: product_count: collection.products_count, count: collection.all_products_count }}
              {%- endif -%}
            </span>
          </h2>
          <div class="loading-overlay__spinner">
            <svg aria-hidden="true" focusable="false" role="presentation" class="spinner" viewBox="0 0 66 66" xmlns="http://www.w3.org/2000/svg">
              <circle class="path" fill="none" stroke-width="6" cx="33" cy="33" r="30"></circle>
            </svg>
          </div>
        </div>  
      </form>
    </facet-filters-form>
  {%- endif -%}

  <div class="product-grid-wrapper {% if section.settings.filter_type == 'vertical' %} facets-vertical page-width{% endif %}">
    {{ 'component-facets.css' | asset_url | stylesheet_tag }}
    <script src="{{ 'facets.js' | asset_url }}" defer="defer"></script>
    {%- if section.settings.enable_filtering or section.settings.enable_sorting -%}
      <aside aria-labelledby="verticalTitle" class="facets-wrapper{% unless section.settings.enable_filtering %} facets-wrapper--no-filters{% endunless %}{% if section.settings.filter_type != 'vertical' %} page-width{% endif %}" id="main-collection-filters" data-id="{{ section.id }}">
        {% render 'facets', results: collection, enable_filtering: section.settings.enable_filtering, enable_sorting: section.settings.enable_sorting, filter_type: section.settings.filter_type %}
      </aside>
    {%- endif -%}

    <div class="product-grid-container" id="ProductGridContainer">
      {%- paginate collection.products by section.settings.products_per_page -%}
          <div class="{% if collection.products.size > 0 %} hidden {% endif %}collection--empty page-width">
            <div class="title-wrapper center">
              <h2 class="title title--primary">
                {{ 'sections.collection_template.empty' | t }}<br>
                {{ 'sections.collection_template.use_fewer_filters_html' | t: link: collection.url, class: "underlined-link link" }}
              </h2>
            </div>
          </div>
          <div class="collection {% if section.settings.filter_type != 'vertical' %}page-width{% endif %}">
            <div class="loading-overlay gradient"></div>

            <div id="ssCatalog">
              <ul id="product-grid" data-result-mode='{{ section.settings.results_mode }}' {% if paginate.next %} data-has-next-page=true {% endif %} data-id="{{ section.id }}" class="
                grid product-grid grid--{{ section.settings.columns_mobile }}-col-tablet-down
                grid--{{ section.settings.columns_desktop }}-col-desktop">
                          
                {% for product in collection.products %}
                  {% assign related_handles_split = product.metafields.product.colorRelatedHandles.value | split: ',' %}
                  {% assign hasFreeShipping = product.tags | map: 'FreeShipping' %}
                  <li class="product grid__item" data-variant-id="{{product.variants[0].id}}" data-handle="{{product.handle}}">
                    <div class="card-wrapper underline-links-hover">
                      <div class="card card--standard card--media">
                        <div class="card__inner color-background-2 gradient ratio">
                          <button class="quick-view__button" data-variant-id="{{ product.variants[0].id }}" data-quantity="1" data-free-shipping="{{hasFreeShipping}}" data-product-handle="{{ product.handle }}">Quick View</button>
                          <div class="card__media">
                            <div class="media media--transparent media--hover-effect">
                              <img src="{{ product.featured_image | image_url: width: 1000 }}" alt="">
                              {% if product.images[1] %}
                                <img src="{{ product.images[1] | image_url: width: 1000 }}" alt="">
                              {% endif %}
                            </div>
                            {% assign blocks = section.blocks | sort: 'settings.priority' | reverse %}
                            
                            {% for block in blocks %}
                              {% assign hasLabel = false %}
                              {% if block.type == 'tag' %}
                                {% for tag in product.tags %}
                                  {% if tag == block.settings.product_tag %}
                                    <div class="card__tag" style="background-color: {{ block.settings.product_tag_background_color }}; color: {{ block.settings.product_tag_text_color }};">{{ block.settings.product_tag_label }}</div>
                                    {% assign hasLabel = true %}
                                    {% break %}
                                  {% endif %}
                                {% endfor %}
                                {% if hasLabel %}
                                  {% break %}
                                {% endif %}
                              {% elsif block.type == 'collection' %}
                                {% for productCollection in product.collections %}
                                  {% if productCollection == block.settings.product_collection %}
                                    <div class="card__tag" style="background-color: {{ block.settings.product_collection_background_color }}; color: {{ block.settings.product_collection_text_color }};">{{ block.settings.product_collection_label }}</div>
                                    {% assign hasLabel = true %}
                                    {% break %}
                                  {% endif %}
                                {% endfor %}
                                {% if hasLabel %}
                                  {% break %}
                                {% endif %}
                              {% endif %}
                            {% endfor %}
                          </div>
                          <a title="{{ product.title }}" href="{{ product.url }}" class="card__content"></a>
                          <div class="card__add-to-wishlist-btn" data-wk-product-id="{{ product.id }}"></div>
                        </div>
                        <div class="card__content">
                          <div class="card__information">
                            <div class="card__information-inner">
                              <h3 class="card__heading h5">
                                <a title="{{ product.title }}" href="{{ product.url }}" class="full-unstyled-link">{{ product.title }}</a>
                              </h3>
                              <h5 class="cart__subheading">{{ product.metafields.product.collectionSubHeader | truncate: 55, "..." }}</h5>
                              <div class="card-information">
                                <div class="price">
                                  <div class="price__container">
                                    <div class="price__sale">
                                      {% unless product.compare_at_price == product.price %}
                                        <span>
                                        <s class="price-item price-item--regular">{{ product.compare_at_price | money }}</s>
                                        </span>
                                      {% endunless %}
                                      <span class="price-item price-item--sale price-item--last">{{ product.price | money }}</span>
                                    </div>
                                  </div>
                                </div>
                              </div>
                              {% render 'related-products-colors-selector' with product: product %}
                            </div>
                            <div>
                              <button class="button button__primary add-to-cart" data-variant-id="{{ product.variants[0].id }}" data-quantity="1" data-free-shipping="{{hasFreeShipping}}">Add to Cart</button>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                  </li>
                {% endfor %}
              </ul>

              <div class="collection-loading-warpper">
                {% render 'icon' with icon_name: 'loader' classes: 'spinner-loading hidden' %}
              </div>
            </div> 
            
            <div id="collection-description">
              <span id="collection-description__content">
                {{ collection.description }}
              </span>
            </div>

            {% if section.settings.results_mode == 'infinite' %}

            {% else %}
              {%- if paginate.pages > 1 -%}
                {% render 'pagination', paginate: paginate, anchor: '' %}
              {%- endif -%}
            {% endif %}

          </div>
      {%- endpaginate -%}
    </div>
  </div>

  <div class="plp-hidden-icons hidden">
    {% render 'icon' with icon_name: 'minus' %}
    {% render 'icon' with icon_name: 'plus' %}
  </div>

  {% render 'warranty-modals' %}

  {% render 'financing-popup-details' %}
</div>

<script>
  window.LC = window.LC || {};
  window.LC.searchSpring = window.LC.searchSpring || {};
  window.LC.searchSpring.perPage = parseInt(`{{ section.settings.products_per_page }}`);
  window.LC.searchSpring.collectionId = parseInt(`{{ collection.id }}`);
  window.LC.quickBuy = {{ section.settings.enable_quick_add | json }};
  window.LC.sectionId = `{{ section.id }}`;
</script>

{% schema %}
{
  "name": "t:sections.main-collection-product-grid.name",
  "class": "section",
  "settings": [
    {
      "type": "range",
      "id": "products_per_page",
      "min": 8,
      "max": 24,
      "step": 4,
      "default": 16,
      "label": "t:sections.main-collection-product-grid.settings.products_per_page.label"
    },
    {
      "type": "range",
      "id": "columns_desktop",
      "min": 1,
      "max": 5,
      "step": 1,
      "default": 4,
      "label": "t:sections.main-collection-product-grid.settings.columns_desktop.label"
    },
    {
      "type": "header",
      "content": "t:sections.main-collection-product-grid.settings.header__3.content"
    },
    {
      "type": "select",
      "id": "image_ratio",
      "options": [
        {
          "value": "adapt",
          "label": "t:sections.main-collection-product-grid.settings.image_ratio.options__1.label"
        },
        {
          "value": "portrait",
          "label": "t:sections.main-collection-product-grid.settings.image_ratio.options__2.label"
        },
        {
          "value": "square",
          "label": "t:sections.main-collection-product-grid.settings.image_ratio.options__3.label"
        }
      ],
      "default": "adapt",
      "label": "t:sections.main-collection-product-grid.settings.image_ratio.label"
    },
    {
      "type": "checkbox",
      "id": "show_secondary_image",
      "default": false,
      "label": "t:sections.main-collection-product-grid.settings.show_secondary_image.label"
    },
    {
      "type": "checkbox",
      "id": "show_vendor",
      "default": false,
      "label": "t:sections.main-collection-product-grid.settings.show_vendor.label"
    },
    {
      "type": "checkbox",
      "id": "show_rating",
      "default": false,
      "label": "t:sections.main-collection-product-grid.settings.show_rating.label",
      "info": "t:sections.main-collection-product-grid.settings.show_rating.info"
    },
    {
      "type": "checkbox",
      "id": "enable_quick_add",
      "default": false,
      "label": "t:sections.main-collection-product-grid.settings.enable_quick_buy.label"
    },
    {
      "type": "header",
      "content": "t:sections.main-collection-product-grid.settings.header__1.content"
    },
    {
      "type": "checkbox",
      "id": "enable_filtering",
      "default": true,
      "label": "t:sections.main-collection-product-grid.settings.enable_filtering.label",
      "info": "t:sections.main-collection-product-grid.settings.enable_filtering.info"
    },
    {
      "type": "select",
      "id": "filter_type",
      "options": [
        {
          "value": "horizontal",
          "label": "t:sections.main-collection-product-grid.settings.filter_type.options__1.label"
        },
        {
          "value": "vertical",
          "label": "t:sections.main-collection-product-grid.settings.filter_type.options__2.label"
        },
        {
          "value": "drawer",
          "label": "t:sections.main-collection-product-grid.settings.filter_type.options__3.label"
        }
      ],
      "default": "horizontal",
      "label": "t:sections.main-collection-product-grid.settings.filter_type.label",
      "info": "t:sections.main-collection-product-grid.settings.filter_type.info"
    },
    {
      "type": "checkbox",
      "id": "enable_sorting",
      "default": true,
      "label": "t:sections.main-collection-product-grid.settings.enable_sorting.label"
    },
    {
      "type": "header",
      "content": "Results"
    },
    {
      "type": "radio",
      "id": "results_mode",
      "label": "Results mode",
      "options": [
        {
          "value": "infinite",
          "label": "Infinite scrolling"
        },
        {
          "value": "pages",
          "label": "Pages"
        }
      ],
      "default": "pages"
    },
    {
      "type": "header",
      "content": "t:sections.main-collection-product-grid.settings.header_mobile.content"
    },
    {
      "type": "select",
      "id": "columns_mobile",
      "default": "2",
      "label": "t:sections.main-collection-product-grid.settings.columns_mobile.label",
      "options": [
        {
          "value": "1",
          "label": "t:sections.main-collection-product-grid.settings.columns_mobile.options__1.label"
        },
        {
          "value": "2",
          "label": "t:sections.main-collection-product-grid.settings.columns_mobile.options__2.label"
        }
      ]
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 300,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 300,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 36
    }
  ],
  "blocks": [
    {
      "name": "Label By Tag",
      "type": "tag",
      "settings": [
        {
          "type": "text",
          "id": "title",
          "label": "Title",
          "info": "Title is optional and is used to help admins to differentiate the blocks"
        },
        {
          "type": "text",
          "id": "product_tag",
          "label": "Product Tag"
        },
        {
          "type": "text",
          "id": "product_tag_label",
          "label": "Label For Tag"
        },
        {
          "type": "color",
          "id": "product_tag_text_color",
          "label": "Text Color"
        },
        {
          "type": "color",
          "id": "product_tag_background_color",
          "label": "Background Color"
        }
      ]
    },
    {
      "name": "Label By Collection",
      "type": "collection",
      "settings": [
        {
          "type": "text",
          "id": "title",
          "label": "Title",
          "info": "Title is optional and is used to help admins to differentiate the blocks"
        },
        {
          "type": "collection",
          "id": "product_collection",
          "label": "Collection Handle"
        },
        {
          "type": "text",
          "id": "product_collection_label",
          "label": "Label For Collection"
        },
        {
          "type": "color",
          "id": "product_collection_text_color",
          "label": "Text Color"
        },
        {
          "type": "color",
          "id": "product_collection_background_color",
          "label": "Background Color"
        }
      ]
    }
  ]
}
{% endschema %}