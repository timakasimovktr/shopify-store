{% comment %}
    Renders a list of product's price (regular, sale)

    Accepts:
    - product: {Object} Product Liquid object (optional)
    - use_variant: {Boolean} Renders selected or first variant price instead of overall product pricing (optional)
    - show_badges: {Boolean} Renders 'Sale' and 'Sold Out' tags if the product matches the condition (optional)
    - price_class: {String} Adds a price class to the price element (optional)

    Usage:
    {% render 'price', product: product %}
{% endcomment %}
{%- liquid
  assign price = 0
  assign money_price = '0'
  assign price_cents = 0
  assign compare_at_price = 0
  assign money_compare_at_price = '0'
  assign compare_at_price_cents = 0

  if use_variant
    assign target = product.selected_or_first_available_variant
  else
    assign target = product
  endif

  assign price = target.price | default: 1999
  if settings.currency_code_enabled
    assign money_price = price | money_with_currency
  else
    assign money_price = price | money
  endif
  assign price_cents_split =  money_price | split: '.'
  if price_cents.size > 1
    assign price_cents = price_cents_split[1] | plus: 0
    assign money_price = price_cents_split[0]
  endif
  assign money_price = money_price | replace: '.00' | replace: '.0'

  assign compare_at_price = target.compare_at_price
  if compare_at_price > 0 and compare_at_price > price
    assign money_compare_at_price = compare_at_price | money
    if settings.currency_code_enabled
      assign money_compare_at_price = compare_at_price | money_with_currency
    else
      assign money_compare_at_price = compare_at_price | money
    endif

    assign compare_at_price_cents_split =  money_compare_at_price | split: '.'
    if compare_at_price_cents.size > 1
      assign compare_at_price_cents = compare_at_price_cents_split[1] | plus: 0
      assign money_compare_at_price = compare_at_price_cents_split[0]
    endif
    assign money_compare_at_price = money_compare_at_price | replace: '.00' | replace: '.0'
  endif

  assign available = target.available | default: false

  if target == product and product.price_varies
    assign money_price = 'products.product.price.from_price_html' | t: price: money_price | replace: '.00' | replace: '.0'
  endif
-%}

<div class="price
  {%- if price_class %} {{ price_class }}{% endif -%}
  {%- if available == false %} price--sold-out {% endif -%}
  {%- if compare_at_price > price %} price--on-sale {% endif -%}
  {%- if product.price_varies == false and product.compare_at_price_varies %} price--no-compare{% endif -%}
  {%- if show_badges %} price--show-badge{% endif -%}">
  <div class="price__container">
    {%- comment -%}
      Explanation of description list:
        - div.price__regular: Displayed when there are no variants on sale
        - div.price__sale: Displayed when a variant is a sale
    {%- endcomment -%}
    <div class="price__regular">
      <span class="visually-hidden visually-hidden--inline">{{ 'products.product.price.regular_price' | t }}</span>
      <span class="price-item price-item--regular" data-price="{{ price }}" data-value="{{ price | divided_by: 100 }}">{{ money_price }}{% if price_cents > 0 %}<sup>{{ price_cents }}</sup>{% endif %}</span>
    </div>
    <div class="price__sale">
      {%- unless product.price_varies == false and product.compare_at_price_varies %}
        <span class="visually-hidden visually-hidden--inline">{{ 'products.product.price.regular_price' | t }}</span>
        <span>
          <s class="price-item price-item--regular" data-value="{{ compare_at_price | divided_by: 100 }}">{{ money_compare_at_price }}{% if compare_at_price_cents > 0 %}<sup>{{ compare_at_price_cents }}</sup>{% endif %}</s>
        </span>
      {%- endunless -%}
      <span class="visually-hidden visually-hidden--inline">{{ 'products.product.price.sale_price' | t }}</span>
      <span class="price-item price-item--sale price-item--last" data-value="{{ price | divided_by: 100 }}">{{ money_price }}{% if price_cents > 0 %}<sup>{{ price_cents }}</sup>{% endif %}</span>
    </div>
    <small class="unit-price caption{% if product.selected_or_first_available_variant.unit_price_measurement == nil %} hidden{% endif %}">
      <span class="visually-hidden">{{ 'products.product.price.unit_price' | t }}</span>
      <span class="price-item price-item--last">
        <span>{{- product.selected_or_first_available_variant.unit_price | money -}}</span>
        <span aria-hidden="true">/</span>
        <span class="visually-hidden">&nbsp;{{ 'accessibility.unit_price_separator' | t }}&nbsp;</span>
        <span>
          {%- if product.selected_or_first_available_variant.unit_price_measurement.reference_value != 1 -%}
            {{- product.selected_or_first_available_variant.unit_price_measurement.reference_value -}}
          {%- endif -%}
          {{ product.selected_or_first_available_variant.unit_price_measurement.reference_unit }}
        </span>
      </span>
    </small>
  </div>
  {%- if show_badges -%}
    <span class="badge price__badge-sale color-{{ settings.sale_badge_color_scheme }}">
      {{ 'products.product.on_sale' | t }}
    </span>

    <span class="badge price__badge-sold-out color-{{ settings.sold_out_badge_color_scheme }}">
      {{ 'products.product.sold_out' | t }}
    </span>
  {%- endif -%}
</div>
